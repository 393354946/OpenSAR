/*
* Configuration of module: Dcm
*
* Created by:   parai          
* Copyright:    (C)parai@foxmail.com  
*
* Configured for (MCU):    MinGW ...
*
* Module vendor:           ArcCore
* Generator version:       2.0.34
*
* Generated by easySAR Studio (https://github.com/parai/OpenSAR)
*/

#ifndef DCM_CFG_H_
#define DCM_CFG_H_

#define DCM_VERSION_INFO_API              STD_ON
#if defined(USE_DET)
#define DCM_DEV_ERROR_DETECT STD_ON
#else
#define DCM_DEV_ERROR_DETECT STD_OFF
#endif

#define DCM_RESPOND_ALL_REQUEST           STD_ON  // Activate/Deactivate response on SID 0x40-0x7f and 0xc0-0xff.
#define DCM_REQUEST_INDICATION_ENABLED    STD_ON  // Activate/Deactivate indication request mechanism.
#define DCM_PAGEDBUFFER_ENABLED           STD_OFF    // Enable/disable page buffer mechanism (currently only disabled supported)

#define DCM_DSL_BUFFER_LIST_LENGTH            4
#define DCM_DSL_TX_PDU_ID_LIST_LENGTH         2
#define DCM_DSL_RX_PDU_ID_LIST_LENGTH         2

#define DCM_MAIN_FUNCTION_PERIOD_TIME_MS    10

// default Size configuration
#define DCM_LIMITNUMBER_PERIODDATA        5  //MaxNumberofSimultaneousPeriodictransmissions
#define DCM_MAX_DDDSOURCE_NUMBER          4  //MaxSourcesforOneDynamicIdentifier
#define DCM_MAX_DDD_NUMBER                2 
 // default Period configuration
#define DCM_PERIODICTRANSMIT_SLOW            50  
#define DCM_PERIODICTRANSMIT_MEDIUM          30
#define DCM_PERIODICTRANSMIT_FAST            15

// index
#define DCM_DIAG_P2P_REQ        0
#define DCM_DIAG_P2A_REQ        1

#define DCM_ID_RxDiagP2P DCM_DIAG_P2P_REQ
#define DCM_ID_RxDiagP2A DCM_DIAG_P2A_REQ

#define PDUR_DIAG_P2P_REQ PDUR_ID_RxDiagP2P
#define PDUR_DIAG_P2A_REQ PDUR_ID_RxDiagP2A

#define DCM_DIAG_P2P_ACK        0
#define DCM_DIAG_P2A_ACK        1

#define DCM_ID_TxDiagP2P DCM_DIAG_P2P_ACK
#define DCM_ID_TxDiagP2A DCM_DIAG_P2A_ACK

#define PDUR_DIAG_P2P_ACK PDUR_ID_TxDiagP2P
#define PDUR_DIAG_P2A_ACK PDUR_ID_TxDiagP2A


//do add/subtract by hand.please
//#define USE_DEM
#define DCM_USE_SERVICE_DIAGNOSTICSESSIONCONTROL
#define DCM_USE_SERVICE_ECURESET
#define DCM_USE_SERVICE_COMMUNICATIONCONTROL
//#define DCM_USE_SERVICE_CLEARDIAGNOSTICINFORMATION
//#define DCM_USE_SERVICE_READDTCINFORMATION
#define DCM_USE_SERVICE_READDATABYIDENTIFIER
//#define DCM_USE_SERVICE_READMEMORYBYADDRESS
//#define DCM_USE_SERVICE_WRITEMEMORYBYADDRESS
//#define DCM_USE_SERVICE_READSCALINGDATABYIDENTIFIER
#define DCM_USE_SERVICE_SECURITYACCESS
#define DCM_USE_SERVICE_WRITEDATABYIDENTIFIER
#define DCM_USE_SERVICE_ROUTINECONTROL
#define DCM_USE_SERVICE_TESTERPRESENT
//#define DCM_USE_SERVICE_CONTROLDTCSETTING
#define DCM_USE_SERVICE_READDATABYPERIODICIDENTIFIER
#define DCM_USE_SERVICE_DYNAMICALLYDEFINEDATAIDENTIFIER
#define DCM_USE_SERVICE_INPUTOUTPUTCONTROLBYIDENTIFIER
#define DCM_USE_SERVICE_UPLOAD_DOWNLOAD

#define fGetSeed(Name)                 Diag_GetSeed##Name
#define fCompareKey(Name)              Diag_CompareKey##Name


#define fDidGetDataLength(Name)        Diag_DidGetDataLength##Name
#define fDidConditionReadCheck(Name)   Diag_DidConditionReadCheck##Name
#define fDidReadData(Name)             Diag_DidReadData##Name
#define fDidConditionCheckWrite(Name)  Diag_DidConditionCheckWrite##Name
#define fDidWriteData(Name)            Diag_DidWriteData##Name

#define fDidFreezeCurrentState(Name)   Diag_DidFreezeCurrentState##Name
#define fDidResetToDefault(Name)       Diag_DidResetToDefault##Name
#define fDidReturnControlToEcu(Name)   Diag_DidReturnControlToEcu##Name
#define fDidShortTermAdjustment(Name)  Diag_DidShortTermAdjustment##Name

#define fStartRoutine(Name)            Diag_StartRoutine##Name
#define fStopRoutine(Name)             Diag_StopRoutine##Name
#define fRequestResultRoutine(Name)    Diag_RequestResultRoutine##Name

extern Std_ReturnType Diag_GetSeedPRGS(uint8 *securityAccessDataRecord, uint8 *seed, Dcm_NegativeResponseCodeType *errorCode);
extern Std_ReturnType Diag_CompareKeyPRGS(uint8 *key);
extern Std_ReturnType Diag_GetSeedEXTDS(uint8 *securityAccessDataRecord, uint8 *seed, Dcm_NegativeResponseCodeType *errorCode);
extern Std_ReturnType Diag_CompareKeyEXTDS(uint8 *key);

extern Std_ReturnType Diag_DidGetDataLengthFingerPrint(uint16 *didLength);
extern Std_ReturnType Diag_DidConditionReadCheckFingerPrint(Dcm_NegativeResponseCodeType *errorCode);
extern Std_ReturnType Diag_DidReadDataFingerPrint(uint8 *data);
extern Std_ReturnType Diag_DidConditionCheckWriteFingerPrint(Dcm_NegativeResponseCodeType *errorCode);
extern Std_ReturnType Diag_DidWriteDataFingerPrint(uint8 *data, uint16 dataLength, Dcm_NegativeResponseCodeType *errorCode);


extern Std_ReturnType Diag_StartRoutineFLErase(uint8 *inBuffer, uint8 *outBuffer, Dcm_NegativeResponseCodeType *errorCode);
#define Diag_StopRoutineFLErase NULL
extern Std_ReturnType Diag_RequestResultRoutineFLErase(uint8 *outBuffer, Dcm_NegativeResponseCodeType *errorCode);
extern Std_ReturnType Diag_StartRoutineFLCheckProgrmIntegrity(uint8 *inBuffer, uint8 *outBuffer, Dcm_NegativeResponseCodeType *errorCode);
#define Diag_StopRoutineFLCheckProgrmIntegrity NULL
extern Std_ReturnType Diag_RequestResultRoutineFLCheckProgrmIntegrity(uint8 *outBuffer, Dcm_NegativeResponseCodeType *errorCode);


extern Std_ReturnType Diag_GetSesChgPer(Dcm_SesCtrlType sesCtrlTypeActive,Dcm_SesCtrlType sesCtrlTypeNew);

extern Std_ReturnType Diag_RequestServiceStart (Dcm_ProtocolType protocolID);
extern Std_ReturnType Diag_RequestServiceStop (Dcm_ProtocolType protocolID);
extern Std_ReturnType Diag_RequestServiceIndication(uint8 *requestData, uint16 dataSize);

#endif /*DCM_CFG_H_*/

