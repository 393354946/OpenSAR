Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    FLOAT
    LPAREN
    NE
    FULL
    GT
    MINUS
    RPAREN
    POWER
    MASK
    LT
    PRIORITY
    PLUS
    ALARMCALLBACK
    ACTION
    COMMA
    LBK
    DIVIDE
    AUTO
    ACTIVATION
    APPMODE
    SETEVENT
    GE
    LE
    RBK
    AUTOSTART
    INTEGER
    MIXED
    TIMES
    ACTIVATETASK
    STRING

Grammar

Rule 0     S' -> mil
Rule 1     mil -> mil object
Rule 2     mil -> object
Rule 3     object -> Os
Rule 4     object -> Task
Rule 5     object -> Alarm
Rule 6     object -> Event
Rule 7     Os -> OS ID LBRACE OsDeclareList RBRACE SEMI
Rule 8     OsDeclareList -> OsDeclareList OsDeclare
Rule 9     OsDeclareList -> OsDeclare
Rule 10    OsDeclare -> STATUS EQUALS STANDARD SEMI
Rule 11    OsDeclare -> STATUS EQUALS EXTENDED SEMI
Rule 12    OsDeclare -> ERRORHOOK EQUALS TRUE SEMI
Rule 13    OsDeclare -> ERRORHOOK EQUALS FALSE SEMI
Rule 14    OsDeclare -> PRETASKHOOK EQUALS TRUE SEMI
Rule 15    OsDeclare -> PRETASKHOOK EQUALS FALSE SEMI
Rule 16    OsDeclare -> POSTTASKHOOK EQUALS TRUE SEMI
Rule 17    OsDeclare -> POSTTASKHOOK EQUALS FALSE SEMI
Rule 18    OsDeclare -> SHUTDOWNHOOK EQUALS TRUE SEMI
Rule 19    OsDeclare -> SHUTDOWNHOOK EQUALS FALSE SEMI
Rule 20    Task -> TASK ID LBRACE DeclareList RBRACE SEMI
Rule 21    Alarm -> ALARM ID LBRACE DeclareList RBRACE SEMI
Rule 22    Event -> EVENT ID LBRACE DeclareList RBRACE SEMI
Rule 23    DeclareList -> DeclareList Declare
Rule 24    DeclareList -> Declare
Rule 25    Declare -> STATUS EQUALS STANDARD SEMI
Rule 26    Declare -> ERRORHOOK EQUALS FALSE SEMI
Rule 27    Declare -> PRETASKHOOK EQUALS FALSE SEMI
Rule 28    Declare -> POSTTASKHOOK EQUALS FALSE SEMI
Rule 29    Declare -> SCHEDULE EQUALS NON SEMI
Rule 30    empty -> <empty>

Terminals, with rules where they appear

ACTION               : 
ACTIVATETASK         : 
ACTIVATION           : 
ALARM                : 21
ALARMCALLBACK        : 
APPMODE              : 
AUTO                 : 
AUTOSTART            : 
COMMA                : 
DIVIDE               : 
EQUALS               : 10 11 12 13 14 15 16 17 18 19 25 26 27 28 29
ERRORHOOK            : 12 13 26
EVENT                : 22
EXTENDED             : 11
FALSE                : 13 15 17 19 26 27 28
FLOAT                : 
FULL                 : 
GE                   : 
GT                   : 
ID                   : 7 20 21 22
INTEGER              : 
LBK                  : 
LBRACE               : 7 20 21 22
LE                   : 
LPAREN               : 
LT                   : 
MASK                 : 
MINUS                : 
MIXED                : 
NE                   : 
NON                  : 29
OS                   : 7
PLUS                 : 
POSTTASKHOOK         : 16 17 28
POWER                : 
PRETASKHOOK          : 14 15 27
PRIORITY             : 
RBK                  : 
RBRACE               : 7 20 21 22
RPAREN               : 
SCHEDULE             : 29
SEMI                 : 7 10 11 12 13 14 15 16 17 18 19 20 21 22 25 26 27 28 29
SETEVENT             : 
SHUTDOWNHOOK         : 18 19
STANDARD             : 10 25
STATUS               : 10 11 25
STRING               : 
TASK                 : 20
TIMES                : 
TRUE                 : 12 14 16 18
error                : 

Nonterminals, with rules where they appear

Alarm                : 5
Declare              : 23 24
DeclareList          : 20 21 22 23
Event                : 6
Os                   : 3
OsDeclare            : 8 9
OsDeclareList        : 7 8
Task                 : 4
empty                : 
mil                  : 1 0
object               : 1 2

Parsing method: LALR

state 0

    (0) S' -> . mil
    (1) mil -> . mil object
    (2) mil -> . object
    (3) object -> . Os
    (4) object -> . Task
    (5) object -> . Alarm
    (6) object -> . Event
    (7) Os -> . OS ID LBRACE OsDeclareList RBRACE SEMI
    (20) Task -> . TASK ID LBRACE DeclareList RBRACE SEMI
    (21) Alarm -> . ALARM ID LBRACE DeclareList RBRACE SEMI
    (22) Event -> . EVENT ID LBRACE DeclareList RBRACE SEMI

    OS              shift and go to state 3
    TASK            shift and go to state 10
    ALARM           shift and go to state 6
    EVENT           shift and go to state 7

    Task                           shift and go to state 1
    mil                            shift and go to state 2
    Alarm                          shift and go to state 4
    object                         shift and go to state 5
    Os                             shift and go to state 8
    Event                          shift and go to state 9

state 1

    (4) object -> Task .

    OS              reduce using rule 4 (object -> Task .)
    TASK            reduce using rule 4 (object -> Task .)
    ALARM           reduce using rule 4 (object -> Task .)
    EVENT           reduce using rule 4 (object -> Task .)
    $end            reduce using rule 4 (object -> Task .)


state 2

    (0) S' -> mil .
    (1) mil -> mil . object
    (3) object -> . Os
    (4) object -> . Task
    (5) object -> . Alarm
    (6) object -> . Event
    (7) Os -> . OS ID LBRACE OsDeclareList RBRACE SEMI
    (20) Task -> . TASK ID LBRACE DeclareList RBRACE SEMI
    (21) Alarm -> . ALARM ID LBRACE DeclareList RBRACE SEMI
    (22) Event -> . EVENT ID LBRACE DeclareList RBRACE SEMI

    OS              shift and go to state 3
    TASK            shift and go to state 10
    ALARM           shift and go to state 6
    EVENT           shift and go to state 7

    Task                           shift and go to state 1
    Alarm                          shift and go to state 4
    object                         shift and go to state 11
    Os                             shift and go to state 8
    Event                          shift and go to state 9

state 3

    (7) Os -> OS . ID LBRACE OsDeclareList RBRACE SEMI

    ID              shift and go to state 12


state 4

    (5) object -> Alarm .

    OS              reduce using rule 5 (object -> Alarm .)
    TASK            reduce using rule 5 (object -> Alarm .)
    ALARM           reduce using rule 5 (object -> Alarm .)
    EVENT           reduce using rule 5 (object -> Alarm .)
    $end            reduce using rule 5 (object -> Alarm .)


state 5

    (2) mil -> object .

    OS              reduce using rule 2 (mil -> object .)
    TASK            reduce using rule 2 (mil -> object .)
    ALARM           reduce using rule 2 (mil -> object .)
    EVENT           reduce using rule 2 (mil -> object .)
    $end            reduce using rule 2 (mil -> object .)


state 6

    (21) Alarm -> ALARM . ID LBRACE DeclareList RBRACE SEMI

    ID              shift and go to state 13


state 7

    (22) Event -> EVENT . ID LBRACE DeclareList RBRACE SEMI

    ID              shift and go to state 14


state 8

    (3) object -> Os .

    OS              reduce using rule 3 (object -> Os .)
    TASK            reduce using rule 3 (object -> Os .)
    ALARM           reduce using rule 3 (object -> Os .)
    EVENT           reduce using rule 3 (object -> Os .)
    $end            reduce using rule 3 (object -> Os .)


state 9

    (6) object -> Event .

    OS              reduce using rule 6 (object -> Event .)
    TASK            reduce using rule 6 (object -> Event .)
    ALARM           reduce using rule 6 (object -> Event .)
    EVENT           reduce using rule 6 (object -> Event .)
    $end            reduce using rule 6 (object -> Event .)


state 10

    (20) Task -> TASK . ID LBRACE DeclareList RBRACE SEMI

    ID              shift and go to state 15


state 11

    (1) mil -> mil object .

    OS              reduce using rule 1 (mil -> mil object .)
    TASK            reduce using rule 1 (mil -> mil object .)
    ALARM           reduce using rule 1 (mil -> mil object .)
    EVENT           reduce using rule 1 (mil -> mil object .)
    $end            reduce using rule 1 (mil -> mil object .)


state 12

    (7) Os -> OS ID . LBRACE OsDeclareList RBRACE SEMI

    LBRACE          shift and go to state 16


state 13

    (21) Alarm -> ALARM ID . LBRACE DeclareList RBRACE SEMI

    LBRACE          shift and go to state 17


state 14

    (22) Event -> EVENT ID . LBRACE DeclareList RBRACE SEMI

    LBRACE          shift and go to state 18


state 15

    (20) Task -> TASK ID . LBRACE DeclareList RBRACE SEMI

    LBRACE          shift and go to state 19


state 16

    (7) Os -> OS ID LBRACE . OsDeclareList RBRACE SEMI
    (8) OsDeclareList -> . OsDeclareList OsDeclare
    (9) OsDeclareList -> . OsDeclare
    (10) OsDeclare -> . STATUS EQUALS STANDARD SEMI
    (11) OsDeclare -> . STATUS EQUALS EXTENDED SEMI
    (12) OsDeclare -> . ERRORHOOK EQUALS TRUE SEMI
    (13) OsDeclare -> . ERRORHOOK EQUALS FALSE SEMI
    (14) OsDeclare -> . PRETASKHOOK EQUALS TRUE SEMI
    (15) OsDeclare -> . PRETASKHOOK EQUALS FALSE SEMI
    (16) OsDeclare -> . POSTTASKHOOK EQUALS TRUE SEMI
    (17) OsDeclare -> . POSTTASKHOOK EQUALS FALSE SEMI
    (18) OsDeclare -> . SHUTDOWNHOOK EQUALS TRUE SEMI
    (19) OsDeclare -> . SHUTDOWNHOOK EQUALS FALSE SEMI

    STATUS          shift and go to state 20
    ERRORHOOK       shift and go to state 26
    PRETASKHOOK     shift and go to state 21
    POSTTASKHOOK    shift and go to state 23
    SHUTDOWNHOOK    shift and go to state 22

    OsDeclareList                  shift and go to state 25
    OsDeclare                      shift and go to state 24

state 17

    (21) Alarm -> ALARM ID LBRACE . DeclareList RBRACE SEMI
    (23) DeclareList -> . DeclareList Declare
    (24) DeclareList -> . Declare
    (25) Declare -> . STATUS EQUALS STANDARD SEMI
    (26) Declare -> . ERRORHOOK EQUALS FALSE SEMI
    (27) Declare -> . PRETASKHOOK EQUALS FALSE SEMI
    (28) Declare -> . POSTTASKHOOK EQUALS FALSE SEMI
    (29) Declare -> . SCHEDULE EQUALS NON SEMI

    STATUS          shift and go to state 27
    ERRORHOOK       shift and go to state 32
    PRETASKHOOK     shift and go to state 31
    POSTTASKHOOK    shift and go to state 29
    SCHEDULE        shift and go to state 28

    DeclareList                    shift and go to state 33
    Declare                        shift and go to state 30

state 18

    (22) Event -> EVENT ID LBRACE . DeclareList RBRACE SEMI
    (23) DeclareList -> . DeclareList Declare
    (24) DeclareList -> . Declare
    (25) Declare -> . STATUS EQUALS STANDARD SEMI
    (26) Declare -> . ERRORHOOK EQUALS FALSE SEMI
    (27) Declare -> . PRETASKHOOK EQUALS FALSE SEMI
    (28) Declare -> . POSTTASKHOOK EQUALS FALSE SEMI
    (29) Declare -> . SCHEDULE EQUALS NON SEMI

    STATUS          shift and go to state 27
    ERRORHOOK       shift and go to state 32
    PRETASKHOOK     shift and go to state 31
    POSTTASKHOOK    shift and go to state 29
    SCHEDULE        shift and go to state 28

    DeclareList                    shift and go to state 34
    Declare                        shift and go to state 30

state 19

    (20) Task -> TASK ID LBRACE . DeclareList RBRACE SEMI
    (23) DeclareList -> . DeclareList Declare
    (24) DeclareList -> . Declare
    (25) Declare -> . STATUS EQUALS STANDARD SEMI
    (26) Declare -> . ERRORHOOK EQUALS FALSE SEMI
    (27) Declare -> . PRETASKHOOK EQUALS FALSE SEMI
    (28) Declare -> . POSTTASKHOOK EQUALS FALSE SEMI
    (29) Declare -> . SCHEDULE EQUALS NON SEMI

    STATUS          shift and go to state 27
    ERRORHOOK       shift and go to state 32
    PRETASKHOOK     shift and go to state 31
    POSTTASKHOOK    shift and go to state 29
    SCHEDULE        shift and go to state 28

    DeclareList                    shift and go to state 35
    Declare                        shift and go to state 30

state 20

    (10) OsDeclare -> STATUS . EQUALS STANDARD SEMI
    (11) OsDeclare -> STATUS . EQUALS EXTENDED SEMI

    EQUALS          shift and go to state 36


state 21

    (14) OsDeclare -> PRETASKHOOK . EQUALS TRUE SEMI
    (15) OsDeclare -> PRETASKHOOK . EQUALS FALSE SEMI

    EQUALS          shift and go to state 37


state 22

    (18) OsDeclare -> SHUTDOWNHOOK . EQUALS TRUE SEMI
    (19) OsDeclare -> SHUTDOWNHOOK . EQUALS FALSE SEMI

    EQUALS          shift and go to state 38


state 23

    (16) OsDeclare -> POSTTASKHOOK . EQUALS TRUE SEMI
    (17) OsDeclare -> POSTTASKHOOK . EQUALS FALSE SEMI

    EQUALS          shift and go to state 39


state 24

    (9) OsDeclareList -> OsDeclare .

    RBRACE          reduce using rule 9 (OsDeclareList -> OsDeclare .)
    STATUS          reduce using rule 9 (OsDeclareList -> OsDeclare .)
    ERRORHOOK       reduce using rule 9 (OsDeclareList -> OsDeclare .)
    PRETASKHOOK     reduce using rule 9 (OsDeclareList -> OsDeclare .)
    POSTTASKHOOK    reduce using rule 9 (OsDeclareList -> OsDeclare .)
    SHUTDOWNHOOK    reduce using rule 9 (OsDeclareList -> OsDeclare .)


state 25

    (7) Os -> OS ID LBRACE OsDeclareList . RBRACE SEMI
    (8) OsDeclareList -> OsDeclareList . OsDeclare
    (10) OsDeclare -> . STATUS EQUALS STANDARD SEMI
    (11) OsDeclare -> . STATUS EQUALS EXTENDED SEMI
    (12) OsDeclare -> . ERRORHOOK EQUALS TRUE SEMI
    (13) OsDeclare -> . ERRORHOOK EQUALS FALSE SEMI
    (14) OsDeclare -> . PRETASKHOOK EQUALS TRUE SEMI
    (15) OsDeclare -> . PRETASKHOOK EQUALS FALSE SEMI
    (16) OsDeclare -> . POSTTASKHOOK EQUALS TRUE SEMI
    (17) OsDeclare -> . POSTTASKHOOK EQUALS FALSE SEMI
    (18) OsDeclare -> . SHUTDOWNHOOK EQUALS TRUE SEMI
    (19) OsDeclare -> . SHUTDOWNHOOK EQUALS FALSE SEMI

    RBRACE          shift and go to state 40
    STATUS          shift and go to state 20
    ERRORHOOK       shift and go to state 26
    PRETASKHOOK     shift and go to state 21
    POSTTASKHOOK    shift and go to state 23
    SHUTDOWNHOOK    shift and go to state 22

    OsDeclare                      shift and go to state 41

state 26

    (12) OsDeclare -> ERRORHOOK . EQUALS TRUE SEMI
    (13) OsDeclare -> ERRORHOOK . EQUALS FALSE SEMI

    EQUALS          shift and go to state 42


state 27

    (25) Declare -> STATUS . EQUALS STANDARD SEMI

    EQUALS          shift and go to state 43


state 28

    (29) Declare -> SCHEDULE . EQUALS NON SEMI

    EQUALS          shift and go to state 44


state 29

    (28) Declare -> POSTTASKHOOK . EQUALS FALSE SEMI

    EQUALS          shift and go to state 45


state 30

    (24) DeclareList -> Declare .

    RBRACE          reduce using rule 24 (DeclareList -> Declare .)
    STATUS          reduce using rule 24 (DeclareList -> Declare .)
    ERRORHOOK       reduce using rule 24 (DeclareList -> Declare .)
    PRETASKHOOK     reduce using rule 24 (DeclareList -> Declare .)
    POSTTASKHOOK    reduce using rule 24 (DeclareList -> Declare .)
    SCHEDULE        reduce using rule 24 (DeclareList -> Declare .)


state 31

    (27) Declare -> PRETASKHOOK . EQUALS FALSE SEMI

    EQUALS          shift and go to state 46


state 32

    (26) Declare -> ERRORHOOK . EQUALS FALSE SEMI

    EQUALS          shift and go to state 47


state 33

    (21) Alarm -> ALARM ID LBRACE DeclareList . RBRACE SEMI
    (23) DeclareList -> DeclareList . Declare
    (25) Declare -> . STATUS EQUALS STANDARD SEMI
    (26) Declare -> . ERRORHOOK EQUALS FALSE SEMI
    (27) Declare -> . PRETASKHOOK EQUALS FALSE SEMI
    (28) Declare -> . POSTTASKHOOK EQUALS FALSE SEMI
    (29) Declare -> . SCHEDULE EQUALS NON SEMI

    RBRACE          shift and go to state 48
    STATUS          shift and go to state 27
    ERRORHOOK       shift and go to state 32
    PRETASKHOOK     shift and go to state 31
    POSTTASKHOOK    shift and go to state 29
    SCHEDULE        shift and go to state 28

    Declare                        shift and go to state 49

state 34

    (22) Event -> EVENT ID LBRACE DeclareList . RBRACE SEMI
    (23) DeclareList -> DeclareList . Declare
    (25) Declare -> . STATUS EQUALS STANDARD SEMI
    (26) Declare -> . ERRORHOOK EQUALS FALSE SEMI
    (27) Declare -> . PRETASKHOOK EQUALS FALSE SEMI
    (28) Declare -> . POSTTASKHOOK EQUALS FALSE SEMI
    (29) Declare -> . SCHEDULE EQUALS NON SEMI

    RBRACE          shift and go to state 50
    STATUS          shift and go to state 27
    ERRORHOOK       shift and go to state 32
    PRETASKHOOK     shift and go to state 31
    POSTTASKHOOK    shift and go to state 29
    SCHEDULE        shift and go to state 28

    Declare                        shift and go to state 49

state 35

    (20) Task -> TASK ID LBRACE DeclareList . RBRACE SEMI
    (23) DeclareList -> DeclareList . Declare
    (25) Declare -> . STATUS EQUALS STANDARD SEMI
    (26) Declare -> . ERRORHOOK EQUALS FALSE SEMI
    (27) Declare -> . PRETASKHOOK EQUALS FALSE SEMI
    (28) Declare -> . POSTTASKHOOK EQUALS FALSE SEMI
    (29) Declare -> . SCHEDULE EQUALS NON SEMI

    RBRACE          shift and go to state 51
    STATUS          shift and go to state 27
    ERRORHOOK       shift and go to state 32
    PRETASKHOOK     shift and go to state 31
    POSTTASKHOOK    shift and go to state 29
    SCHEDULE        shift and go to state 28

    Declare                        shift and go to state 49

state 36

    (10) OsDeclare -> STATUS EQUALS . STANDARD SEMI
    (11) OsDeclare -> STATUS EQUALS . EXTENDED SEMI

    STANDARD        shift and go to state 53
    EXTENDED        shift and go to state 52


state 37

    (14) OsDeclare -> PRETASKHOOK EQUALS . TRUE SEMI
    (15) OsDeclare -> PRETASKHOOK EQUALS . FALSE SEMI

    TRUE            shift and go to state 55
    FALSE           shift and go to state 54


state 38

    (18) OsDeclare -> SHUTDOWNHOOK EQUALS . TRUE SEMI
    (19) OsDeclare -> SHUTDOWNHOOK EQUALS . FALSE SEMI

    TRUE            shift and go to state 57
    FALSE           shift and go to state 56


state 39

    (16) OsDeclare -> POSTTASKHOOK EQUALS . TRUE SEMI
    (17) OsDeclare -> POSTTASKHOOK EQUALS . FALSE SEMI

    TRUE            shift and go to state 58
    FALSE           shift and go to state 59


state 40

    (7) Os -> OS ID LBRACE OsDeclareList RBRACE . SEMI

    SEMI            shift and go to state 60


state 41

    (8) OsDeclareList -> OsDeclareList OsDeclare .

    RBRACE          reduce using rule 8 (OsDeclareList -> OsDeclareList OsDeclare .)
    STATUS          reduce using rule 8 (OsDeclareList -> OsDeclareList OsDeclare .)
    ERRORHOOK       reduce using rule 8 (OsDeclareList -> OsDeclareList OsDeclare .)
    PRETASKHOOK     reduce using rule 8 (OsDeclareList -> OsDeclareList OsDeclare .)
    POSTTASKHOOK    reduce using rule 8 (OsDeclareList -> OsDeclareList OsDeclare .)
    SHUTDOWNHOOK    reduce using rule 8 (OsDeclareList -> OsDeclareList OsDeclare .)


state 42

    (12) OsDeclare -> ERRORHOOK EQUALS . TRUE SEMI
    (13) OsDeclare -> ERRORHOOK EQUALS . FALSE SEMI

    TRUE            shift and go to state 62
    FALSE           shift and go to state 61


state 43

    (25) Declare -> STATUS EQUALS . STANDARD SEMI

    STANDARD        shift and go to state 63


state 44

    (29) Declare -> SCHEDULE EQUALS . NON SEMI

    NON             shift and go to state 64


state 45

    (28) Declare -> POSTTASKHOOK EQUALS . FALSE SEMI

    FALSE           shift and go to state 65


state 46

    (27) Declare -> PRETASKHOOK EQUALS . FALSE SEMI

    FALSE           shift and go to state 66


state 47

    (26) Declare -> ERRORHOOK EQUALS . FALSE SEMI

    FALSE           shift and go to state 67


state 48

    (21) Alarm -> ALARM ID LBRACE DeclareList RBRACE . SEMI

    SEMI            shift and go to state 68


state 49

    (23) DeclareList -> DeclareList Declare .

    RBRACE          reduce using rule 23 (DeclareList -> DeclareList Declare .)
    STATUS          reduce using rule 23 (DeclareList -> DeclareList Declare .)
    ERRORHOOK       reduce using rule 23 (DeclareList -> DeclareList Declare .)
    PRETASKHOOK     reduce using rule 23 (DeclareList -> DeclareList Declare .)
    POSTTASKHOOK    reduce using rule 23 (DeclareList -> DeclareList Declare .)
    SCHEDULE        reduce using rule 23 (DeclareList -> DeclareList Declare .)


state 50

    (22) Event -> EVENT ID LBRACE DeclareList RBRACE . SEMI

    SEMI            shift and go to state 69


state 51

    (20) Task -> TASK ID LBRACE DeclareList RBRACE . SEMI

    SEMI            shift and go to state 70


state 52

    (11) OsDeclare -> STATUS EQUALS EXTENDED . SEMI

    SEMI            shift and go to state 71


state 53

    (10) OsDeclare -> STATUS EQUALS STANDARD . SEMI

    SEMI            shift and go to state 72


state 54

    (15) OsDeclare -> PRETASKHOOK EQUALS FALSE . SEMI

    SEMI            shift and go to state 73


state 55

    (14) OsDeclare -> PRETASKHOOK EQUALS TRUE . SEMI

    SEMI            shift and go to state 74


state 56

    (19) OsDeclare -> SHUTDOWNHOOK EQUALS FALSE . SEMI

    SEMI            shift and go to state 75


state 57

    (18) OsDeclare -> SHUTDOWNHOOK EQUALS TRUE . SEMI

    SEMI            shift and go to state 76


state 58

    (16) OsDeclare -> POSTTASKHOOK EQUALS TRUE . SEMI

    SEMI            shift and go to state 77


state 59

    (17) OsDeclare -> POSTTASKHOOK EQUALS FALSE . SEMI

    SEMI            shift and go to state 78


state 60

    (7) Os -> OS ID LBRACE OsDeclareList RBRACE SEMI .

    OS              reduce using rule 7 (Os -> OS ID LBRACE OsDeclareList RBRACE SEMI .)
    TASK            reduce using rule 7 (Os -> OS ID LBRACE OsDeclareList RBRACE SEMI .)
    ALARM           reduce using rule 7 (Os -> OS ID LBRACE OsDeclareList RBRACE SEMI .)
    EVENT           reduce using rule 7 (Os -> OS ID LBRACE OsDeclareList RBRACE SEMI .)
    $end            reduce using rule 7 (Os -> OS ID LBRACE OsDeclareList RBRACE SEMI .)


state 61

    (13) OsDeclare -> ERRORHOOK EQUALS FALSE . SEMI

    SEMI            shift and go to state 79


state 62

    (12) OsDeclare -> ERRORHOOK EQUALS TRUE . SEMI

    SEMI            shift and go to state 80


state 63

    (25) Declare -> STATUS EQUALS STANDARD . SEMI

    SEMI            shift and go to state 81


state 64

    (29) Declare -> SCHEDULE EQUALS NON . SEMI

    SEMI            shift and go to state 82


state 65

    (28) Declare -> POSTTASKHOOK EQUALS FALSE . SEMI

    SEMI            shift and go to state 83


state 66

    (27) Declare -> PRETASKHOOK EQUALS FALSE . SEMI

    SEMI            shift and go to state 84


state 67

    (26) Declare -> ERRORHOOK EQUALS FALSE . SEMI

    SEMI            shift and go to state 85


state 68

    (21) Alarm -> ALARM ID LBRACE DeclareList RBRACE SEMI .

    OS              reduce using rule 21 (Alarm -> ALARM ID LBRACE DeclareList RBRACE SEMI .)
    TASK            reduce using rule 21 (Alarm -> ALARM ID LBRACE DeclareList RBRACE SEMI .)
    ALARM           reduce using rule 21 (Alarm -> ALARM ID LBRACE DeclareList RBRACE SEMI .)
    EVENT           reduce using rule 21 (Alarm -> ALARM ID LBRACE DeclareList RBRACE SEMI .)
    $end            reduce using rule 21 (Alarm -> ALARM ID LBRACE DeclareList RBRACE SEMI .)


state 69

    (22) Event -> EVENT ID LBRACE DeclareList RBRACE SEMI .

    OS              reduce using rule 22 (Event -> EVENT ID LBRACE DeclareList RBRACE SEMI .)
    TASK            reduce using rule 22 (Event -> EVENT ID LBRACE DeclareList RBRACE SEMI .)
    ALARM           reduce using rule 22 (Event -> EVENT ID LBRACE DeclareList RBRACE SEMI .)
    EVENT           reduce using rule 22 (Event -> EVENT ID LBRACE DeclareList RBRACE SEMI .)
    $end            reduce using rule 22 (Event -> EVENT ID LBRACE DeclareList RBRACE SEMI .)


state 70

    (20) Task -> TASK ID LBRACE DeclareList RBRACE SEMI .

    OS              reduce using rule 20 (Task -> TASK ID LBRACE DeclareList RBRACE SEMI .)
    TASK            reduce using rule 20 (Task -> TASK ID LBRACE DeclareList RBRACE SEMI .)
    ALARM           reduce using rule 20 (Task -> TASK ID LBRACE DeclareList RBRACE SEMI .)
    EVENT           reduce using rule 20 (Task -> TASK ID LBRACE DeclareList RBRACE SEMI .)
    $end            reduce using rule 20 (Task -> TASK ID LBRACE DeclareList RBRACE SEMI .)


state 71

    (11) OsDeclare -> STATUS EQUALS EXTENDED SEMI .

    RBRACE          reduce using rule 11 (OsDeclare -> STATUS EQUALS EXTENDED SEMI .)
    STATUS          reduce using rule 11 (OsDeclare -> STATUS EQUALS EXTENDED SEMI .)
    ERRORHOOK       reduce using rule 11 (OsDeclare -> STATUS EQUALS EXTENDED SEMI .)
    PRETASKHOOK     reduce using rule 11 (OsDeclare -> STATUS EQUALS EXTENDED SEMI .)
    POSTTASKHOOK    reduce using rule 11 (OsDeclare -> STATUS EQUALS EXTENDED SEMI .)
    SHUTDOWNHOOK    reduce using rule 11 (OsDeclare -> STATUS EQUALS EXTENDED SEMI .)


state 72

    (10) OsDeclare -> STATUS EQUALS STANDARD SEMI .

    RBRACE          reduce using rule 10 (OsDeclare -> STATUS EQUALS STANDARD SEMI .)
    STATUS          reduce using rule 10 (OsDeclare -> STATUS EQUALS STANDARD SEMI .)
    ERRORHOOK       reduce using rule 10 (OsDeclare -> STATUS EQUALS STANDARD SEMI .)
    PRETASKHOOK     reduce using rule 10 (OsDeclare -> STATUS EQUALS STANDARD SEMI .)
    POSTTASKHOOK    reduce using rule 10 (OsDeclare -> STATUS EQUALS STANDARD SEMI .)
    SHUTDOWNHOOK    reduce using rule 10 (OsDeclare -> STATUS EQUALS STANDARD SEMI .)


state 73

    (15) OsDeclare -> PRETASKHOOK EQUALS FALSE SEMI .

    RBRACE          reduce using rule 15 (OsDeclare -> PRETASKHOOK EQUALS FALSE SEMI .)
    STATUS          reduce using rule 15 (OsDeclare -> PRETASKHOOK EQUALS FALSE SEMI .)
    ERRORHOOK       reduce using rule 15 (OsDeclare -> PRETASKHOOK EQUALS FALSE SEMI .)
    PRETASKHOOK     reduce using rule 15 (OsDeclare -> PRETASKHOOK EQUALS FALSE SEMI .)
    POSTTASKHOOK    reduce using rule 15 (OsDeclare -> PRETASKHOOK EQUALS FALSE SEMI .)
    SHUTDOWNHOOK    reduce using rule 15 (OsDeclare -> PRETASKHOOK EQUALS FALSE SEMI .)


state 74

    (14) OsDeclare -> PRETASKHOOK EQUALS TRUE SEMI .

    RBRACE          reduce using rule 14 (OsDeclare -> PRETASKHOOK EQUALS TRUE SEMI .)
    STATUS          reduce using rule 14 (OsDeclare -> PRETASKHOOK EQUALS TRUE SEMI .)
    ERRORHOOK       reduce using rule 14 (OsDeclare -> PRETASKHOOK EQUALS TRUE SEMI .)
    PRETASKHOOK     reduce using rule 14 (OsDeclare -> PRETASKHOOK EQUALS TRUE SEMI .)
    POSTTASKHOOK    reduce using rule 14 (OsDeclare -> PRETASKHOOK EQUALS TRUE SEMI .)
    SHUTDOWNHOOK    reduce using rule 14 (OsDeclare -> PRETASKHOOK EQUALS TRUE SEMI .)


state 75

    (19) OsDeclare -> SHUTDOWNHOOK EQUALS FALSE SEMI .

    RBRACE          reduce using rule 19 (OsDeclare -> SHUTDOWNHOOK EQUALS FALSE SEMI .)
    STATUS          reduce using rule 19 (OsDeclare -> SHUTDOWNHOOK EQUALS FALSE SEMI .)
    ERRORHOOK       reduce using rule 19 (OsDeclare -> SHUTDOWNHOOK EQUALS FALSE SEMI .)
    PRETASKHOOK     reduce using rule 19 (OsDeclare -> SHUTDOWNHOOK EQUALS FALSE SEMI .)
    POSTTASKHOOK    reduce using rule 19 (OsDeclare -> SHUTDOWNHOOK EQUALS FALSE SEMI .)
    SHUTDOWNHOOK    reduce using rule 19 (OsDeclare -> SHUTDOWNHOOK EQUALS FALSE SEMI .)


state 76

    (18) OsDeclare -> SHUTDOWNHOOK EQUALS TRUE SEMI .

    RBRACE          reduce using rule 18 (OsDeclare -> SHUTDOWNHOOK EQUALS TRUE SEMI .)
    STATUS          reduce using rule 18 (OsDeclare -> SHUTDOWNHOOK EQUALS TRUE SEMI .)
    ERRORHOOK       reduce using rule 18 (OsDeclare -> SHUTDOWNHOOK EQUALS TRUE SEMI .)
    PRETASKHOOK     reduce using rule 18 (OsDeclare -> SHUTDOWNHOOK EQUALS TRUE SEMI .)
    POSTTASKHOOK    reduce using rule 18 (OsDeclare -> SHUTDOWNHOOK EQUALS TRUE SEMI .)
    SHUTDOWNHOOK    reduce using rule 18 (OsDeclare -> SHUTDOWNHOOK EQUALS TRUE SEMI .)


state 77

    (16) OsDeclare -> POSTTASKHOOK EQUALS TRUE SEMI .

    RBRACE          reduce using rule 16 (OsDeclare -> POSTTASKHOOK EQUALS TRUE SEMI .)
    STATUS          reduce using rule 16 (OsDeclare -> POSTTASKHOOK EQUALS TRUE SEMI .)
    ERRORHOOK       reduce using rule 16 (OsDeclare -> POSTTASKHOOK EQUALS TRUE SEMI .)
    PRETASKHOOK     reduce using rule 16 (OsDeclare -> POSTTASKHOOK EQUALS TRUE SEMI .)
    POSTTASKHOOK    reduce using rule 16 (OsDeclare -> POSTTASKHOOK EQUALS TRUE SEMI .)
    SHUTDOWNHOOK    reduce using rule 16 (OsDeclare -> POSTTASKHOOK EQUALS TRUE SEMI .)


state 78

    (17) OsDeclare -> POSTTASKHOOK EQUALS FALSE SEMI .

    RBRACE          reduce using rule 17 (OsDeclare -> POSTTASKHOOK EQUALS FALSE SEMI .)
    STATUS          reduce using rule 17 (OsDeclare -> POSTTASKHOOK EQUALS FALSE SEMI .)
    ERRORHOOK       reduce using rule 17 (OsDeclare -> POSTTASKHOOK EQUALS FALSE SEMI .)
    PRETASKHOOK     reduce using rule 17 (OsDeclare -> POSTTASKHOOK EQUALS FALSE SEMI .)
    POSTTASKHOOK    reduce using rule 17 (OsDeclare -> POSTTASKHOOK EQUALS FALSE SEMI .)
    SHUTDOWNHOOK    reduce using rule 17 (OsDeclare -> POSTTASKHOOK EQUALS FALSE SEMI .)


state 79

    (13) OsDeclare -> ERRORHOOK EQUALS FALSE SEMI .

    RBRACE          reduce using rule 13 (OsDeclare -> ERRORHOOK EQUALS FALSE SEMI .)
    STATUS          reduce using rule 13 (OsDeclare -> ERRORHOOK EQUALS FALSE SEMI .)
    ERRORHOOK       reduce using rule 13 (OsDeclare -> ERRORHOOK EQUALS FALSE SEMI .)
    PRETASKHOOK     reduce using rule 13 (OsDeclare -> ERRORHOOK EQUALS FALSE SEMI .)
    POSTTASKHOOK    reduce using rule 13 (OsDeclare -> ERRORHOOK EQUALS FALSE SEMI .)
    SHUTDOWNHOOK    reduce using rule 13 (OsDeclare -> ERRORHOOK EQUALS FALSE SEMI .)


state 80

    (12) OsDeclare -> ERRORHOOK EQUALS TRUE SEMI .

    RBRACE          reduce using rule 12 (OsDeclare -> ERRORHOOK EQUALS TRUE SEMI .)
    STATUS          reduce using rule 12 (OsDeclare -> ERRORHOOK EQUALS TRUE SEMI .)
    ERRORHOOK       reduce using rule 12 (OsDeclare -> ERRORHOOK EQUALS TRUE SEMI .)
    PRETASKHOOK     reduce using rule 12 (OsDeclare -> ERRORHOOK EQUALS TRUE SEMI .)
    POSTTASKHOOK    reduce using rule 12 (OsDeclare -> ERRORHOOK EQUALS TRUE SEMI .)
    SHUTDOWNHOOK    reduce using rule 12 (OsDeclare -> ERRORHOOK EQUALS TRUE SEMI .)


state 81

    (25) Declare -> STATUS EQUALS STANDARD SEMI .

    RBRACE          reduce using rule 25 (Declare -> STATUS EQUALS STANDARD SEMI .)
    STATUS          reduce using rule 25 (Declare -> STATUS EQUALS STANDARD SEMI .)
    ERRORHOOK       reduce using rule 25 (Declare -> STATUS EQUALS STANDARD SEMI .)
    PRETASKHOOK     reduce using rule 25 (Declare -> STATUS EQUALS STANDARD SEMI .)
    POSTTASKHOOK    reduce using rule 25 (Declare -> STATUS EQUALS STANDARD SEMI .)
    SCHEDULE        reduce using rule 25 (Declare -> STATUS EQUALS STANDARD SEMI .)


state 82

    (29) Declare -> SCHEDULE EQUALS NON SEMI .

    RBRACE          reduce using rule 29 (Declare -> SCHEDULE EQUALS NON SEMI .)
    STATUS          reduce using rule 29 (Declare -> SCHEDULE EQUALS NON SEMI .)
    ERRORHOOK       reduce using rule 29 (Declare -> SCHEDULE EQUALS NON SEMI .)
    PRETASKHOOK     reduce using rule 29 (Declare -> SCHEDULE EQUALS NON SEMI .)
    POSTTASKHOOK    reduce using rule 29 (Declare -> SCHEDULE EQUALS NON SEMI .)
    SCHEDULE        reduce using rule 29 (Declare -> SCHEDULE EQUALS NON SEMI .)


state 83

    (28) Declare -> POSTTASKHOOK EQUALS FALSE SEMI .

    RBRACE          reduce using rule 28 (Declare -> POSTTASKHOOK EQUALS FALSE SEMI .)
    STATUS          reduce using rule 28 (Declare -> POSTTASKHOOK EQUALS FALSE SEMI .)
    ERRORHOOK       reduce using rule 28 (Declare -> POSTTASKHOOK EQUALS FALSE SEMI .)
    PRETASKHOOK     reduce using rule 28 (Declare -> POSTTASKHOOK EQUALS FALSE SEMI .)
    POSTTASKHOOK    reduce using rule 28 (Declare -> POSTTASKHOOK EQUALS FALSE SEMI .)
    SCHEDULE        reduce using rule 28 (Declare -> POSTTASKHOOK EQUALS FALSE SEMI .)


state 84

    (27) Declare -> PRETASKHOOK EQUALS FALSE SEMI .

    RBRACE          reduce using rule 27 (Declare -> PRETASKHOOK EQUALS FALSE SEMI .)
    STATUS          reduce using rule 27 (Declare -> PRETASKHOOK EQUALS FALSE SEMI .)
    ERRORHOOK       reduce using rule 27 (Declare -> PRETASKHOOK EQUALS FALSE SEMI .)
    PRETASKHOOK     reduce using rule 27 (Declare -> PRETASKHOOK EQUALS FALSE SEMI .)
    POSTTASKHOOK    reduce using rule 27 (Declare -> PRETASKHOOK EQUALS FALSE SEMI .)
    SCHEDULE        reduce using rule 27 (Declare -> PRETASKHOOK EQUALS FALSE SEMI .)


state 85

    (26) Declare -> ERRORHOOK EQUALS FALSE SEMI .

    RBRACE          reduce using rule 26 (Declare -> ERRORHOOK EQUALS FALSE SEMI .)
    STATUS          reduce using rule 26 (Declare -> ERRORHOOK EQUALS FALSE SEMI .)
    ERRORHOOK       reduce using rule 26 (Declare -> ERRORHOOK EQUALS FALSE SEMI .)
    PRETASKHOOK     reduce using rule 26 (Declare -> ERRORHOOK EQUALS FALSE SEMI .)
    POSTTASKHOOK    reduce using rule 26 (Declare -> ERRORHOOK EQUALS FALSE SEMI .)
    SCHEDULE        reduce using rule 26 (Declare -> ERRORHOOK EQUALS FALSE SEMI .)

